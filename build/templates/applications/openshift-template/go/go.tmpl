# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Template
metadata:
  name: {{.Name}}
  annotations:
    iconClass: icon-go
    description: Openshift template for Go application/service deploying
    template.openshift.io/provider-display-name: EPAM
    template.openshift.io/support-url: https://www.epam.com
objects:
{{- if eq .Framework "operator-sdk"}}
- apiVersion: authorization.openshift.io/v1
  kind: Role
  metadata:
    name: edp-{{.Name}}-role-${NAMESPACE}
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - get
    - list
    - delete
- apiVersion: authorization.openshift.io/v1
  kind: RoleBinding
  metadata:
    name: {{.Name}}-edp-${NAMESPACE}
  roleRef:
    name: edp-{{.Name}}-role-${NAMESPACE}
    namespace: ${NAMESPACE}
  subjects:
    - kind: ServiceAccount
      name: {{.Name}}
      namespace: ${NAMESPACE}
  userNames:
    - system:serviceaccount:${NAMESPACE}:{{.Name}}
  groupNames: []
{{- end}}
- apiVersion: v1
  kind: Service
  metadata:
    name: {{.Name}}
    labels:
      app: {{.Name}}
  spec:
    ports:
    - name: {{.Name}}
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: {{.Name}}
    type: ClusterIP
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: {{.Name}}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: {{.Name}}
    labels:
      app: {{.Name}}
  spec:
    replicas: 1
    selector:
      app: {{.Name}}
    strategy:
      activeDeadlineSeconds: 21600
      type: Rolling
      rollingParams:
        failurePolicy: Abort
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
    template:
      metadata:
        labels:
          app: {{.Name}}
      spec:
        serviceAccountName: {{.Name}}
        containers:
        - name: {{.Name}}
          image: "docker-registry.default.svc:5000/${IMAGE_NAME}:${APP_VERSION}"
          imagePullPolicy: Always
{{- if eq .Framework "operator-sdk"}}
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: {{.Name}}
            - name: PLATFORM_TYPE
              value: {{.PlatformType}}
{{- end}}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
      - type: ConfigChange
parameters:
- displayName: Application image name
  name: IMAGE_NAME
  required: true
  value: {{.Name}}
- displayName: Application version
  name: APP_VERSION
  required: true
  value: "latest"
- displayName: Current namespace
  name: NAMESPACE
  required: true
