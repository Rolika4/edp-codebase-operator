// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	v1 "github.com/epam/edp-codebase-operator/v2/pkg/apis/edp/v1"
)

// CodebaseHandler is an autogenerated mock type for the CodebaseHandler type
type CodebaseHandler struct {
	mock.Mock
}

// ServeRequest provides a mock function with given fields: _a0, _a1
func (_m *CodebaseHandler) ServeRequest(_a0 context.Context, _a1 *v1.Codebase) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.Codebase) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCodebaseHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewCodebaseHandler creates a new instance of CodebaseHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCodebaseHandler(t mockConstructorTestingTNewCodebaseHandler) *CodebaseHandler {
	mock := &CodebaseHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
